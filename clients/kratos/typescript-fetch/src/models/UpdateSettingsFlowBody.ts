/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.2.0
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UpdateSettingsFlowWithLookupMethod } from './UpdateSettingsFlowWithLookupMethod';
import {
    instanceOfUpdateSettingsFlowWithLookupMethod,
    UpdateSettingsFlowWithLookupMethodFromJSON,
    UpdateSettingsFlowWithLookupMethodFromJSONTyped,
    UpdateSettingsFlowWithLookupMethodToJSON,
} from './UpdateSettingsFlowWithLookupMethod';
import type { UpdateSettingsFlowWithOidcMethod } from './UpdateSettingsFlowWithOidcMethod';
import {
    instanceOfUpdateSettingsFlowWithOidcMethod,
    UpdateSettingsFlowWithOidcMethodFromJSON,
    UpdateSettingsFlowWithOidcMethodFromJSONTyped,
    UpdateSettingsFlowWithOidcMethodToJSON,
} from './UpdateSettingsFlowWithOidcMethod';
import type { UpdateSettingsFlowWithPasskeyMethod } from './UpdateSettingsFlowWithPasskeyMethod';
import {
    instanceOfUpdateSettingsFlowWithPasskeyMethod,
    UpdateSettingsFlowWithPasskeyMethodFromJSON,
    UpdateSettingsFlowWithPasskeyMethodFromJSONTyped,
    UpdateSettingsFlowWithPasskeyMethodToJSON,
} from './UpdateSettingsFlowWithPasskeyMethod';
import type { UpdateSettingsFlowWithPasswordMethod } from './UpdateSettingsFlowWithPasswordMethod';
import {
    instanceOfUpdateSettingsFlowWithPasswordMethod,
    UpdateSettingsFlowWithPasswordMethodFromJSON,
    UpdateSettingsFlowWithPasswordMethodFromJSONTyped,
    UpdateSettingsFlowWithPasswordMethodToJSON,
} from './UpdateSettingsFlowWithPasswordMethod';
import type { UpdateSettingsFlowWithProfileMethod } from './UpdateSettingsFlowWithProfileMethod';
import {
    instanceOfUpdateSettingsFlowWithProfileMethod,
    UpdateSettingsFlowWithProfileMethodFromJSON,
    UpdateSettingsFlowWithProfileMethodFromJSONTyped,
    UpdateSettingsFlowWithProfileMethodToJSON,
} from './UpdateSettingsFlowWithProfileMethod';
import type { UpdateSettingsFlowWithTotpMethod } from './UpdateSettingsFlowWithTotpMethod';
import {
    instanceOfUpdateSettingsFlowWithTotpMethod,
    UpdateSettingsFlowWithTotpMethodFromJSON,
    UpdateSettingsFlowWithTotpMethodFromJSONTyped,
    UpdateSettingsFlowWithTotpMethodToJSON,
} from './UpdateSettingsFlowWithTotpMethod';
import type { UpdateSettingsFlowWithWebAuthnMethod } from './UpdateSettingsFlowWithWebAuthnMethod';
import {
    instanceOfUpdateSettingsFlowWithWebAuthnMethod,
    UpdateSettingsFlowWithWebAuthnMethodFromJSON,
    UpdateSettingsFlowWithWebAuthnMethodFromJSONTyped,
    UpdateSettingsFlowWithWebAuthnMethodToJSON,
} from './UpdateSettingsFlowWithWebAuthnMethod';

/**
 * @type UpdateSettingsFlowBody
 * Update Settings Flow Request Body
 * @export
 */
export type UpdateSettingsFlowBody = { method: 'lookup_secret' } & UpdateSettingsFlowWithLookupMethod | { method: 'oidc' } & UpdateSettingsFlowWithOidcMethod | { method: 'passkey' } & UpdateSettingsFlowWithPasskeyMethod | { method: 'password' } & UpdateSettingsFlowWithPasswordMethod | { method: 'profile' } & UpdateSettingsFlowWithProfileMethod | { method: 'totp' } & UpdateSettingsFlowWithTotpMethod | { method: 'webauthn' } & UpdateSettingsFlowWithWebAuthnMethod;

export function UpdateSettingsFlowBodyFromJSON(json: any): UpdateSettingsFlowBody {
    return UpdateSettingsFlowBodyFromJSONTyped(json, false);
}

export function UpdateSettingsFlowBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSettingsFlowBody {
    if (json == null) {
        return json;
    }
    switch (json['method']) {
        case 'lookup_secret':
            return {...UpdateSettingsFlowWithLookupMethodFromJSONTyped(json, true), method: 'lookup_secret'};
        case 'oidc':
            return {...UpdateSettingsFlowWithOidcMethodFromJSONTyped(json, true), method: 'oidc'};
        case 'passkey':
            return {...UpdateSettingsFlowWithPasskeyMethodFromJSONTyped(json, true), method: 'passkey'};
        case 'password':
            return {...UpdateSettingsFlowWithPasswordMethodFromJSONTyped(json, true), method: 'password'};
        case 'profile':
            return {...UpdateSettingsFlowWithProfileMethodFromJSONTyped(json, true), method: 'profile'};
        case 'totp':
            return {...UpdateSettingsFlowWithTotpMethodFromJSONTyped(json, true), method: 'totp'};
        case 'webauthn':
            return {...UpdateSettingsFlowWithWebAuthnMethodFromJSONTyped(json, true), method: 'webauthn'};
        default:
            throw new Error(`No variant of UpdateSettingsFlowBody exists with 'method=${json['method']}'`);
    }
}

export function UpdateSettingsFlowBodyToJSON(value?: UpdateSettingsFlowBody | null): any {
    if (value == null) {
        return value;
    }
    switch (value['method']) {
        case 'lookup_secret':
            return UpdateSettingsFlowWithLookupMethodToJSON(value);
        case 'oidc':
            return UpdateSettingsFlowWithOidcMethodToJSON(value);
        case 'passkey':
            return UpdateSettingsFlowWithPasskeyMethodToJSON(value);
        case 'password':
            return UpdateSettingsFlowWithPasswordMethodToJSON(value);
        case 'profile':
            return UpdateSettingsFlowWithProfileMethodToJSON(value);
        case 'totp':
            return UpdateSettingsFlowWithTotpMethodToJSON(value);
        case 'webauthn':
            return UpdateSettingsFlowWithWebAuthnMethodToJSON(value);
        default:
            throw new Error(`No variant of UpdateSettingsFlowBody exists with 'method=${value['method']}'`);
    }

}

